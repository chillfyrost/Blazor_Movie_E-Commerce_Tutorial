@page "/"
@inject ICustomerService customerService 
@implements IDisposable


<h1>Welcome</h1>
<br /><br />
Movie Title: @movie.Title
<br />
<input type="text" @bind-value="movie.Title" @bind-value:event="oninput" />
<br />
<br />

<label>
    <input type="checkbox" @bind-value="isActive" />
    &nbsp; Is Active
</label>
<br />
@isActive

<br />
<br />
<p>
    <label>
        <input type="radio"
               value="1"
               name="group"
               @onclick="@(()=> selectedGroup = 1)" />
        1
    </label>
    <label>
        <input type="radio"
               value="2"
               name="group"
               @onclick="@(()=> selectedGroup = 2)" />
        2
    </label>
    <br />
    @selectedGroup
</p>
<p>
    Select Movie Title
    <br />
    <select @bind="selectedMovieId">
        <option value="0"></option>
        @foreach (var movie in movies)
        {
            <option value="@movie.Id">@movie.Title</option>
        }
    </select>
    <br />
    @selectedMovieId
    <br />
    <br />
    <VisibilityComponent @ref="visibilityComponent"></VisibilityComponent>
    <br />
    <button @onclick="Toggle">Toggle Visibility</button>
</p>
<br />
<br />
<p>
    <h3 class="text-info">Templated Component Render Fragment Example</h3>
    <TemplatedComponent Items="movies" TItem="Movie">
        
        <Header>
            <p><b>Welcome to my site</b></p>
            
        </Header>
        <RepeaterItem Context="item">
            <p><img class="img-thumbnail" src="@item.ImageLink" /></p>
            <p class="font-weight-bold text-primary">Title: @item.Title</p>
            <p>Title: @item.YearReleased</p>
            <p>Title: @item.Description</p>
            <hr />
        </RepeaterItem>
        <Footer>
            <div style="font-size:10px;">
                Feel free to leave a comment!
            </div>
        </Footer>
    </TemplatedComponent>
</p>
<br /><br />
<h3> Form Exercise</h3>
<p class="p-3">
    <EditForm Model="person" OnValidSubmit="ValidFormSubmitted">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <label>First Name</label><br />
        <InputText id="fname" @bind-Value="person.FirstName"></InputText>
        <br />
        <label>Last Name</label><br />
        <InputText id="lname" @bind-Value="person.LastName"></InputText>
        <br />
        <label>Employee Number</label><br />
        <InputNumber id="emp_number" @bind-Value="person.EmployeeNumber"></InputNumber>
        <br />
        <label>Email</label><br />
        <InputText id="email" @bind-Value="person.Email"></InputText>
        <br />
        <br />
        <input type="submit" value="Submit" />
    </EditForm>
</p>
<br /><br />
<text>Guid: </text>@customerService.UId
<br />
<p>
    @if (customer != null)
    {
    <b>Customer in View: </b>  @customer.Name<br />

    }
</p>
@code {
    private VisibilityComponent visibilityComponent;
    private int selectedMovieId = 0;
    private List<Movie> movies = new List<Movie>
    {
        new Movie { Id = 1, Title="Iron Man", YearReleased = "2008", ImageLink="https://m.media-amazon.com/images/I/517EnJmL7+L._AC_UY218_.jpg", Description="After being held captive in an Afghan cave, billionaire engineer Tony Stark creates a unique weaponized suit of armor to fight evil."},
        new Movie { Id = 2, Title="Hercules", YearReleased = "2012", ImageLink="https://m.media-amazon.com/images/I/915zrle1jhL._AC_UY218_.jpg", Description="Having endured his legendary twelve labors, Hercules, the Greek demigod, has his life as a sword-for-hire tested when the King of Thrace and his daughter seek his aid in defeating a tyrannical warlord."},
        new Movie { Id = 3, Title="2012", YearReleased = "2009", ImageLink="https://m.media-amazon.com/images/I/91gj8w+frzL._AC_UY218_.jpg", Description="A frustrated writer struggles to keep his family alive when a series of global catastrophes threatens to annihilate mankind."}

    };
    private int selectedGroup;
    private bool isActive = false;
    private Movie movie = new Movie { Id = 4, Title = "Movie 4", YearReleased = "2011", ImageLink = "http://", Description = "Description Movie 4" };

    void Toggle()
    {
        this.visibilityComponent.SetVisibility();
    }

    Person person = new Person();

    class Person
    {
        [Required]
        [StringLength(100)]
        public string FirstName { get; set; }

        [Required]
        [StringLength(100)]
        public string LastName { get; set; }

        [Required]
        [Range(1,1000)]
        public int EmployeeNumber { get; set; }

        [Required]
        [EmailAddress]
        public string Email { get; set; }
    }

    private void ValidFormSubmitted()
    {

    }

    //Customer Service Section
    private Customer customer;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        customer = customerService.GetCustomerById(4);
    }
    public void Dispose()
    {

    }
}
